1. Create env

2. activate env

3. create requirements.txt & install it. {dvc, dvc[gdrive], sklearn} modules should be there.

4. create a template.py file using "python > template.py" in terminal. Use template.py file to make necessary files & directories in main directory.

5. run following from terminal:
	5.1. git init
	5.2. dvc init
	5.3. dvc add data_given/winequality.csv
	5.4. git add .
	5.5. git commit -m "first commit"
	5.6. git branch -M main
	5.7. git remote add origin  https://github.com/ssr-1998/Wine_Quality_MLOPs.git
	5.8. git push origin main

6. write code in params.yaml file & push updates on github

7. create a python file in src directory named get_data.py & write code for reading data, process & then return it as dataframe. In this we will load the data using
params.yaml & return it to the system after loading in a dataframe format. In end, push updates on github

8. create a python file in src directory named load_data.py & write code for reading data from data source, process & then save the new csv file as a dataframe.
Mention this load_data.py as a stage in dvc.yaml file & run "dvc repro" in terminal. It will create a dvc.lock file which is having all the parts of stage 1 tracked.
In end, push updates on github

9. create a python file in src directory named split_data.py & write code for Spliting the Raw Data into [TRAIN & TEST] & then save the new csv files as a dataframe.
Mention this split_data.py as a stage in dvc.yaml file & run "dvc repro" in terminal. In end, push updates on github

10. create a python file in src directory named train_and_evaluate.py & write code for training model on train & test. Also write code for model evaluation.

11. create a report directory in main directory and create 2 json files with name storing params.json & score.json files.

12. before running check all code in train_and_evaluate.py, dvc.yaml & in params.yaml. If all good. run "dvc repro" means to reproduce. If all runs good. Push to GIT.

13. run "dvc metrics show" in terminal. This will show the current params & scores for model.

14. run "dvc metrics diff" in terminal. This will show the difference b\w the old & new params & scores.

|---|---|---|---|---|---|---|---|---|---|---|---|---|---| After this we are going for Testing Part |---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|


